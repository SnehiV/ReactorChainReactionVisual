{"version":3,"sources":["webpack:///webpack/bootstrap 27ec67b71f2c085b669f","webpack:///./lib/rcrv.js","webpack:///./lib/simulation.js","webpack:///./lib/neutron.js","webpack:///./lib/core.js","webpack:///./lib/simulation_view.js","webpack:///./lib/util.js"],"names":["document","addEventListener","canvas","getElementsByTagName","width","DIM_X","height","DIM_Y","core","getElementById","ctx","getContext","simulation","start","Simulation","coreImage","neutrons","populateNeutrons","createCore","pos","radius","i","push","randomPos","speed","colorIndex","clearRect","fillStyle","BG_COLOR","fillRect","draw","coreLength","drawImage","forEach","neutron","timeDelta","move","moveNeutrons","checkCollisions","index","splice","neutronCount","length","kValue","slice","idx","isCollidedWith","removeNeutron","probability","calculateFissionProbability","Math","random","generateNeutron","FPS","Neutron","options","vel","randomVelocity","color","neutronColor","beginPath","arc","PI","fill","colors","velocityScale","NORMAL_FRAME_TIME_DELTA","offsetX","offsetY","isOutOfBounds","randomWrap","side","floor","randomWrapVelocity","centerDist","dist","Core","clearLength","neutronPostions","oldNeutron","newColorIndex","newPos","newVel","coreNeutronVelocity","SimulationView","lastTime","requestAnimationFrame","animate","bind","time","step","Util","x","y","deg","sin","cos","abs","pos1","pos2","sqrt","pow"],"mappings":"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","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 27ec67b71f2c085b669f\n **/","import Simulation from './simulation';\nimport SimulationView from './simulation_view';\n\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvas = document.getElementsByTagName(\"canvas\")[0];\n  canvas.width = Simulation.DIM_X;\n  canvas.height = Simulation.DIM_Y;\n  const core = document.getElementById(\"core\");\n\n  const ctx = canvas.getContext(\"2d\");\n  const simulation = new Simulation();\n  new SimulationView(simulation, ctx, core).start();\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/rcrv.js\n **/","import Neutron from './neutron';\nimport Core from './core';\nimport Util from './util';\n\nclass Simulation {\n  constructor(ctx, coreImage) {\n    this.ctx = ctx;\n    this.neutrons = [];\n    this.populateNeutrons();\n    this.createCore();\n  }\n\n  createCore(){\n    this.core = new Core(this, {pos: [(Simulation.DIM_X / 2), (Simulation.DIM_Y / 2)], radius: 75});\n  }\n\n  populateNeutrons() {\n    for (let i = 0; i < 10;   i++) {\n      this.neutrons.push(new Neutron(this,\n        {pos: Util.randomPos(Simulation.DIM_X, Simulation.DIM_Y),\n          speed: 2, colorIndex: 0}));\n    }\n  }\n\n\n  draw(ctx, coreImage){\n    ctx.clearRect(0, 0, Simulation.DIM_X, Simulation.DIM_Y);\n    ctx.fillStyle = Simulation.BG_COLOR;\n    ctx.fillRect(0, 0, Simulation.DIM_X, Simulation.DIM_Y);\n\n    this.core.draw(ctx);\n\n    let coreLength = 140;\n    ctx.drawImage(coreImage, ((Simulation.DIM_X/ 2) - (coreLength/ 2)),\n    ((Simulation.DIM_Y/ 2) - (coreLength/ 2)), coreLength, coreLength);\n\n    this.neutrons.forEach(neutron => neutron.draw(ctx));\n  }\n\n  moveNeutrons(timeDelta){\n    this.neutrons.forEach(neutron => neutron.move(timeDelta));\n  }\n\n  step(timeDelta){\n    this.moveNeutrons(timeDelta);\n    this.checkCollisions();\n  }\n\n  isOutOfBounds(pos){\n    return (pos[0] < 0 || pos[1] < 0) ||\n    (pos[0] > Simulation.DIM_X || pos[1] > Simulation.DIM_Y);\n  }\n\n  removeNeutron(index){\n    this.neutrons.splice(index, 1);\n  }\n\n  calculateFissionProbability() {\n    let neutronCount = this.neutrons.length;\n    return ((neutronCount * this.core.kValue) / (neutronCount * 2));\n  }\n\n  checkCollisions() {\n    let neutrons = this.neutrons.slice(0);\n    neutrons.forEach((neutron, idx) => {\n      if (neutron.isCollidedWith(this.core)) {\n        this.removeNeutron(idx);\n        let probability = this.calculateFissionProbability();\n        if (Math.random() <= probability) {\n          this.neutrons.push(this.core.generateNeutron(neutron))\n          this.neutrons.push(this.core.generateNeutron(neutron))\n        }\n      }\n    });\n  }\n\n\n\n}\n\n\n\nSimulation.BG_COLOR = \"#000000\";\nSimulation.DIM_X = 750;\nSimulation.DIM_Y = 500;\nSimulation.FPS = 32;\n\n\nexport default Simulation;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/simulation.js\n **/","import Simulation from './simulation';\nimport Util from './util';\n\nclass Neutron {\n  constructor(simulation, options){\n    this.simulation = simulation;\n    this.pos = options.pos;\n    this.speed = options.speed || 2;\n    this.vel = options.vel || Util.randomVelocity(this.speed);\n    this.radius = options.radius || 2;\n    this.colorIndex = options.colorIndex;\n    this.color = this.neutronColor(this.colorIndex);\n  }\n\n  draw(ctx){\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n\n  neutronColor(colorIndex) {\n    const colors = [\"red\", \"yellow\", \"orange\", \"green\", \"blue\", \"purple\", \"pink\"];\n    return colors[colorIndex];\n  }\n\n  move(timeDelta) {\n    const velocityScale = timeDelta / NORMAL_FRAME_TIME_DELTA;\n    let offsetX = this.vel[0] * velocityScale;\n    let offsetY = this.vel[1] * velocityScale;\n    let pos = [this.pos[0] + offsetX, this.pos[1] + offsetY];\n    if (this.simulation.isOutOfBounds(pos)){\n      this.randomWrap(pos);\n    } else {\n      this.pos = pos;\n    }\n  }\n\n  randomWrap(pos){\n    let side = Math.floor(Math.random() * 4);\n    if (side === 0) {\n      this.pos = [Math.random() * Simulation.DIM_X, 0];\n      this.vel = Util.randomWrapVelocity(side, this.speed);\n    } else if (side === 1) {\n      this.pos = [Simulation.DIM_X, Math.random() * Simulation.DIM_Y];\n      this.vel = Util.randomWrapVelocity(side, this.speed);\n    } else if (side === 2) {\n      this.pos = [Math.random() * Simulation.DIM_X, Simulation.DIM_Y];\n      this.vel = Util.randomWrapVelocity(side, this.speed);\n    } else if (side === 3) {\n      this.pos = [0, Math.random() * Simulation.DIM_Y];\n      this.vel = Util.randomWrapVelocity(side, this.speed);\n    }\n  }\n\n  isCollidedWith(core) {\n    const centerDist = Util.dist(this.pos, core.pos);\n    return centerDist < (this.radius + core.radius);\n  }\n\n\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000/60;\n\nexport default Neutron;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/neutron.js\n **/","import Neutron from './neutron';\nimport Util from './util';\n\nclass Core extends Neutron {\n  constructor(simulation, options){\n    super(simulation, options);\n      // this.simulation = simulation;\n      // this.pos = options.pos;\n      this.speed = 0;\n      this.vel = [0, 0];\n      // this.radius = options.radius;\n      this.color = \"white\";\n      this.clearLength = this.radius + 15;\n      this.neutronPostions = [\n        [this.pos[0], (this.pos[1] - this.clearLength)],\n        [(this.pos[0] + this.clearLength), this.pos[1]],\n        [this.pos[0], (this.pos[1] + this.clearLength)],\n        [(this.pos[0] - this.clearLength), this.pos[1]]\n      ];\n      this.kValue = 1.1;\n  }\n\n\n  draw(ctx){\n    ctx.fillStyle = this.color;\n\n    ctx.beginPath();\n    ctx.arc(\n      this.pos[0], this.pos[1], this.radius, 0, 2 * Math.PI, true\n    );\n    ctx.fill();\n  }\n\n  generateNeutron(oldNeutron) {\n    let newColorIndex;\n    if ((oldNeutron.colorIndex + 1) > 6) {\n      newColorIndex = 0;\n    } else {\n      newColorIndex = oldNeutron.colorIndex + 1;\n    }\n    let side = Math.floor(Math.random() * 4);\n    let newPos = this.neutronPostions[side];\n    let newVel = Util.coreNeutronVelocity(side, oldNeutron.speed);\n\n    return new Neutron(this.simulation, {pos: newPos, vel: newVel, colorIndex: newColorIndex});\n  }\n}\n\n\n\n\nexport default Core;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/core.js\n **/","\n\nclass SimulationView {\n  constructor(simulation, ctx, coreImage){\n    this.ctx = ctx;\n    this.simulation = simulation;\n    this.coreImage = coreImage;\n  }\n\n  start() {\n    this.lastTime = 0;\n    requestAnimationFrame(this.animate.bind(this));\n  }\n\n  animate(time) {\n    const timeDelta = time - this.lastTime;\n\n    this.simulation.step(timeDelta);\n    this.simulation.draw(this.ctx, this.coreImage);\n    this.lastTime = time;\n\n    requestAnimationFrame(this.animate.bind(this));\n  }\n}\n\nexport default SimulationView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/simulation_view.js\n **/","\n\nconst Util = {\n\n  randomPos(x, y){\n    return [Math.random() * x, Math.random() * y];\n  },\n\n  randomVelocity (speed) {\n    let deg = 2 * Math.PI * Math.random();\n    return [Math.sin(deg) * speed, Math.cos(deg) * speed];\n  },\n\n  randomWrapVelocity(side, speed) {\n    let deg = 2 * Math.PI * Math.random();\n    if (side === 0) {\n      return [Math.sin(deg) * speed, Math.cos(deg) * speed];\n    } else if (side === 1) {\n      return [-(Math.sin(deg)) * speed, Math.cos(deg) * speed];\n    } else if (side === 2) {\n      return [Math.abs(Math.sin(deg)) * speed, Math.cos(deg) * speed];\n    } else if (side === 3) {\n      return [Math.abs(Math.sin(deg)) * speed,\n        Math.cos(deg) * speed];\n    }\n  },\n\n  coreNeutronVelocity(side, speed) {\n    let deg = Math.PI * Math.random();\n    if (side === 0) {\n      return [Math.cos(deg) * speed, -(Math.sin(deg)) * speed];\n    } else if (side === 1) {\n      return [Math.abs(Math.cos(deg)) * speed, Math.sin(deg) * speed];\n    } else if (side === 2) {\n      return [Math.abs(Math.cos(deg)) * speed, Math.abs(Math.sin(deg)) * speed];\n    } else if (side === 3) {\n      return [-(Math.cos(deg)) * speed, Math.sin(deg) * speed];\n    }\n  },\n\n  dist(pos1, pos2) {\n    return Math.sqrt(Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2));\n  }\n};\n\nexport default Util;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util.js\n **/"],"sourceRoot":""}